apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.firebase-crash'


// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("../../Keystore/wifidoc-keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.inceptai.dobby"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        wifidoc_config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    productFlavors {
        wifidoc {
            applicationIdSuffix ".wifidoc"
            versionCode 9
            versionName "1.1-wifitester-beta9"
        }
        dobby {
            applicationIdSuffix ".ai"
            versionCode 1
            versionName "1.0-ai"
        }
    }
    buildTypes {
        release {
            productFlavors.wifidoc.signingConfig signingConfigs.wifidoc_config
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            useProguard false
        }
    }

    sourceSets {

    }

    // This is needed to remove a DuplicateFileException that comes from adding api ai dependencies.
    packagingOptions {
        exclude 'META-INF/LICENSE'
    }
}

dependencies {
    compile files('libs/jspeedtest-1.26.jar')
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    // API.AI Gradle dependencies.
    //  api.ai SDK dependencies
    // compile 'com.android.support:appcompat-v7:23.2.1'
    //Speed test dependencies
    // Since we are on Android, we need to use guava version 20 for JDK 1.6 / 1.7
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'ai.api:libai:1.4.8'
    compile 'ai.api:sdk:2.0.5@aar'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'commons-io:commons-io:2.4'
    compile 'com.google.guava:guava:20.0'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.google.dagger:dagger:2.9'
    compile 'com.github.lecho:hellocharts-library:1.5.8@aar'
    compile 'com.google.firebase:firebase-crash:10.0.1'
    compile 'com.google.firebase:firebase-core:10.0.1'
    compile 'com.google.firebase:firebase-database:10.0.1'
    testCompile 'junit:junit:4.12'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.9'
    provided 'javax.annotation:jsr250-api:1.0'
    //For jspeedtest
    // compile 'fr.bmartel:jspeedtest:1.25'
    compile 'fr.bmartel:http-endec:1.04'
    compile 'commons-net:commons-net:3.6'
    compile 'uk.co.samuelwall:material-tap-target-prompt:1.1.4'
    compile 'org.parceler:parceler-api:1.1.6'
    annotationProcessor 'org.parceler:parceler:1.1.6'
}

apply plugin: 'com.google.gms.google-services'