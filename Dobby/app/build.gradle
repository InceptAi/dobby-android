apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.firebase-crash'
apply plugin: 'spoon'


// Create a variable called keystorePropertiesFileWifiDoc, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFileWifiDoc = rootProject.file("../../Keystore/wifidoc-keystore.properties")
def keystorePropertiesFileWifiExpert = rootProject.file("../../Keystore/wifiexpert-keystore.properties")

// Initialize a new Properties() object called keystorePropertiesWifiDoc.
def keystorePropertiesWifiDoc = new Properties()
def keystorePropertiesWifiExpert = new Properties()


// Load your keystore.properties file into the keystorePropertiesWifiDoc object.
keystorePropertiesWifiDoc.load(new FileInputStream(keystorePropertiesFileWifiDoc))
keystorePropertiesWifiExpert.load(new FileInputStream(keystorePropertiesFileWifiExpert))


android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.inceptai.wifiexpert"
        minSdkVersion 15
        targetSdkVersion 25
        //TODO: Remove this once API.AI fix is there
        maxSdkVersion 25
        versionCode 1
        versionName "1.0"
        // testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.inceptai.dobby.MyAndroidJUnitRunner"
    }
    signingConfigs {
        wifidoc_config {
            keyAlias keystorePropertiesWifiDoc['keyAlias']
            keyPassword keystorePropertiesWifiDoc['keyPassword']
            storeFile file(keystorePropertiesWifiDoc['storeFile'])
            storePassword keystorePropertiesWifiDoc['storePassword']
        }
        wifiexpert_config {
            keyAlias keystorePropertiesWifiExpert['keyAlias']
            keyPassword keystorePropertiesWifiExpert['keyPassword']
            storeFile file(keystorePropertiesWifiExpert['storeFile'])
            storePassword keystorePropertiesWifiExpert['storePassword']
        }
    }
    productFlavors {
        wifidoc {
            applicationId  "com.inceptai.dobby.wifidoc"
            versionCode 28
            versionName "1.2.0-wifitester-chat"
        }
        dobby {
            applicationId "com.inceptai.wifiexpert"
            versionCode 25
            versionName "2.0.3-wifiexpert"
        }
    }
    buildTypes {
        release {
            productFlavors.wifidoc.signingConfig signingConfigs.wifidoc_config
            productFlavors.dobby.signingConfig signingConfigs.wifiexpert_config
            minifyEnabled false
            useProguard false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            applicationIdSuffix ".debug"
            useProguard false
        }
    }

    sourceSets {

    }

    // This is needed to remove a DuplicateFileException that comes from adding api ai dependencies.


    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        exclude 'META-INF/NOTICE'
    }

    lintOptions {
        abortOnError false
    }
}


// This section is optional
spoon {
    // for debug output
    debug = true

    // To run a single test class
    //className = 'com.inceptai.dobby.ui.WifiExpertUITests'

    // To run a single method in TestCase
    //methodName = 'bwTestDefaultTest'

    // To execute the tests device by device */
    sequential = true

    // To grant permissions to Android M >= devices */
    grantAllPermissions = true

    if (project.hasProperty('spoonClassName')) {
        className = project.spoonClassName

        if (project.hasProperty('spoonMethodName')) {
            methodName = project.spoonMethodName
        }
    }
}

/*
android.productFlavors.all { flavour ->
    def applicationId = flavour.applicationId
    def adb = android.getAdbExe().toString()

    def grantPermissionsTask = tasks.create("grant${flavour.name.capitalize()}Permissions") << {
        "${adb} shell pm grant ${applicationId} android.permission.ACCESS_FINE_LOCATION".execute()
        "${adb} shell pm grant ${applicationId} android.permission.ACCESS_COARSE_LOCATION".execute()
    }
    grantPermissionsTask.description = "Grants permissions for Marshmallow"

    tasks.whenTaskAdded { theTask ->
        def assemblePattern = ~"assemble${flavour.name.capitalize()}DebugAndroidTest"
        if (assemblePattern.matcher(theTask.name).matches()) {
            theTask.dependsOn grantPermissionsTask.name
        }
    }
}
*/

dependencies {
    compile files('libs/jspeedtest-1.26.jar')
    compile fileTree(include: ['*.jar'], dir: 'libs')

    // API.AI Gradle dependencies.
    //  api.ai SDK dependencies
    // compile 'com.android.support:appcompat-v7:23.2.1'
    //Speed test dependencies
    // Since we are on Android, we need to use guava version 20 for JDK 1.6 / 1.7
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'commons-io:commons-io:2.4'
    compile 'com.google.guava:guava:20.0'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.google.dagger:dagger:2.9'
    compile 'com.github.lecho:hellocharts-library:1.5.8@aar'
    compile 'com.google.firebase:firebase-crash:10.0.1'
    compile 'com.google.firebase:firebase-core:10.0.1'
    compile 'com.google.firebase:firebase-database:10.0.1'
    compile 'com.google.firebase:firebase-storage:10.0.1'
    compile 'com.google.firebase:firebase-messaging:10.0.1'
    compile 'de.hdodenhof:circleimageview:1.3.0'

    compile 'ai.api:sdk:2.0.5@aar'
    // api.ai SDK dependencies
    compile('ai.api:libai:1.4.8') {
        exclude module: 'log4j-core'
    }

    // Firebase UI
    // compile 'com.firebaseui:firebase-ui-database:1.2.0'

    annotationProcessor 'com.google.dagger:dagger-compiler:2.9'
    provided 'javax.annotation:jsr250-api:1.0'
    // For jspeedtest
    // compile 'fr.bmartel:jspeedtest:1.25'
    compile 'fr.bmartel:http-endec:1.04'
    compile 'commons-net:commons-net:3.6'
    compile 'com.google.firebase:firebase-config:10.0.1'
    compile 'org.parceler:parceler-api:1.1.6'
    annotationProcessor 'org.parceler:parceler:1.1.6'

    //For ManagementFactory classes
    //compile group: 'com.sun', name: 'rt', version: '1.5.0_06'


    // Dependencies for tests:
    testCompile 'junit:junit:4.12'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile 'com.android.support:support-annotations:25.3.1';
    androidTestCompile 'com.android.support.test:runner:' + rootProject.runnerVersion;
    androidTestCompile 'com.android.support.test:rules:' + rootProject.rulesVersion;
    androidTestCompile 'com.squareup.spoon:spoon-client:1.6.4'
}

apply plugin: 'com.google.gms.google-services'
